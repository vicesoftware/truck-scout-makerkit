{
  "title": "CMS",
  "pages": [
    {
      "url": "https://makerkit.dev/docs/next-supabase-turbo/content/cms",
      "title": "Using the CMS interface in Makerkit | Next.js Supabase SaaS Kit",
      "content": "Using the CMS interface in Makerkit | Next.js Supabase SaaS KitThe CMS library in Makerkit abstracts the implementation from where you store your data. It provides a simple API to interact with your data, and it's easy to extend and customize.\n\nMakerkit implements a CMS interface that abstracts the implementation from where you store your data. It provides a simple API to interact with your data, and it's easy to extend and customize.By default, Makerkit ships with two CMS implementations:Keystatic - a CMS that stores data in a JSON file or on your Github repositoryWordpress - needs no introductionYou can also create your own CMS implementation by extending the CMS class.By default, we use Keystatic using local mode (eg. storing data in a JSON file). You can change the mode to github to store data in your Github repository or cloud to use their cloud service.Local mode is the easiest way to get started since you need no setup. However, assuming you want to use edge-rendering, you'll need to switch to a remote mode (eg. Github) or a remote-only CMS (eg. Wordpress)."
    }
  ]
}