{
  "url": "https://makerkit.dev/docs/next-supabase-turbo/installation/clone-repository",
  "title": "Clone the Next.js Supabase SaaS Kit Turbo Repository",
  "content": "Clone the Next.js Supabase SaaS Kit Turbo RepositoryClone the Next.js Supabase SaaS Kit Turbo repository to your local machine.\n\nPrerequisitesTo get started with Makerkit, ensure you have the following prerequisites installed and set up:Node.js 18.x or laterDockerPnpmSupabase account (optional for local development)Payment Gateway account (Stripe or Lemon Squeezy)Email Service account (optional for local development)Verify your Git usernameTo verify you have access, you need to check that your local Git username is the same as set up in the Makerkit's Github organization.Please run the following command to check your Git username:git config user.usernameIf the output is not your Github username, or does not match the username registered in Makerkit's Github organization, you can set it using the following command:git config --global user.username <your-github-username>NB: You must replace <your-github-username> with your actual Github username in between quotes.For example, if your Github username is johndoe, you can set it using the following command:git config --global user.username \"johndoe\"This is important to ensure you can run the repository.Cloning the RepositoryClone the repository using the following command:git clone git@github.com:makerkit/next-supabase-saas-kit-turboNote: If your SSH key isn't set up, use HTTPS instead:git clone https://github.com/makerkit/next-supabase-saas-kit-turboWindows Users: place the repository near the root of your driveSome Windows users hit errors loading certain modules due to very long paths. To avoid this, try placing the repository near the root of your drive.Avoid using OneDrive, as it can cause issues with Node.js.Important: Use HTTPS for All Commands if Not Using SSHIf you are not using SSH, ensure you switch to HTTPS for all Git commands, not just the clone command.Configuring Git RemotesAfter cloning the repository, remove the original origin remote:git remote rm originAdd the upstream remote pointing to the original repository to pull updates:git remote add upstream git@github.com:makerkit/next-supabase-saas-kit-turboOnce you have your own repository set up, add your repository as the origin:git remote add origin <your-repository-url>Keeping Your Repository Up to DateTo pull updates from the upstream repository, run the following command daily (preferably with your morning coffee â˜•):git pull upstream mainThis ensures your repository stays up to date with the latest changes.0.1. Install PnpmInstall Pnpm globally with the following command:npm i -g pnpm1. Setup DependenciesInstall the necessary dependencies for the project:pnpm iWith these steps completed, your development environment will be set up and ready to go! ðŸš€2. Post-merge HooksIt's very useful to run the following command after pulling updates from the upstream repository:pnpm iThis ensures that any new dependencies are installed and the project is up to date. We can run this command automatically after pulling updates by setting up a post-merge hook.Create a new file named post-merge in the .git/hooks directory:touch .git/hooks/post-mergeAdd the following content to the post-merge file:#!/bin/bashpnpm iMake the post-merge file executable:chmod +x .git/hooks/post-mergeNow, every time you pull updates from the upstream repository, the pnpm i command will run automatically to ensure your project is up to date. This ensures you're always working with the latest changes and dependencies and avoid errors that may arise from outdated dependencies."
}